{"version":3,"sources":["Components/nav.js","Components/error.js","redux/type.js","redux/actions/add-user.js","Components/result.js","Components/singIn.js","Components/dataBase.js","Components/singUp.js","Components/userProfile.js","App.js","serviceWorker.js","redux/reducers/userReducer.js","redux/reducers/planetsReducer.js","redux/reducers/functionsReducer.js","redux/reducers/loginUserReducer.js","redux/indexRedux.js","all-reducers.js","store.js","index.js"],"names":["Nav","fristPage","left","window","innerWidth","this","props","location","pathname","bottom","className","to","activeClassName","style","position","exact","Component","Error","touched","message","password","repeatPassword","users","type","loginUser","userLogin","Result","validLogin","userData","filter","u","email","loginEmail","loginPassword","length","isSubmitting","add","map","name","p","animate","opacity","initial","color","React","connect","state","dispatch","actions","headerVariants","y","in","out","loginVariants","x","buttonVariants","labelVariants","SingIn","validationSchema","yup","shape","login_email","required","login_password","min","clicked","labelUp","functions","section","variants","exit","transition","delay","h1","duration","stiffness","initialValues","onSubmit","values","document","querySelectorAll","forEach","i","value","querySelector","handleBlur","handleChange","handleSubmit","errors","action","method","onChange","change","onClick","setState","input","id","onBlur","label","htmlFor","button","setSubmitting","rotate","typeName","key","secondName","codePhone","phoneNumber","planet","gender","SingUp","user","second_name","repeat_password","phone_number","max","planets","a","fetch","res","status","json","data","console","log","getData","then","results","article","t","ransition","code_phone","highestId","div","scale","display","fontSize","textAlign","marginLeft","disabled","avatarVariants","rotateY","nameVariants","sectionVariants","UserProfile","App","basename","render","exitBeforeEnter","path","Boolean","hostname","match","initialState","inputs","activeElement","l","labelName","classList","remove","addEventListener","functionsState","userReducer","types","newState","planetsReducer","functionsReducer","loginUserReducer","conectReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9636dd51.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nclass Nav extends Component {\r\n    render() {\r\n        let fristPage = { left: \"0px\" }\r\n\r\n        if (window.innerWidth < 1000) {\r\n            if (this.props.location.pathname === \"/dataBase\") fristPage = { bottom: \"-60px\" }\r\n            else if (this.props.location.pathname === \"/singIn\") fristPage = { bottom: \"-30px\" }\r\n            else fristPage = { bottom: \"0px\" }\r\n        } else {\r\n            if (this.props.location.pathname === \"/dataBase\") fristPage = { left: \"230px\" }\r\n            else if (this.props.location.pathname === \"/singIn\") fristPage = { left: \"110px\" }\r\n            else fristPage = { left: \"0px\" }\r\n        }\r\n        return (\r\n            <nav>\r\n                <div className=\"logo\"></div>\r\n                <ul className=\"nav-login\">\r\n                    <NavLink to=\"/\" activeClassName=\"active \" style={{ position: \"relative\" }} exact>\r\n                        <li className=\"login\">Sing Up</li>\r\n                        <span className=\"active-route\" style={fristPage} ></span>\r\n                    </NavLink>\r\n                    <NavLink to=\"/singIn\" activeClassName=\"active\" exact>\r\n                        <li className=\"login\">Sing In</li>\r\n                    </NavLink>\r\n                    <NavLink to=\"/dataBase\" activeClassName=\"active \" exact>\r\n                        <li className=\"login\">Data Base</li>\r\n                    </NavLink>\r\n                </ul>\r\n            </nav >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\n\r\nconst Error = ({ touched, message, password, repeatPassword }) => {\r\n\r\n    if (!touched) {\r\n\r\n        return <div className=\"error\"  ></div>\r\n\r\n    } else if (password !== repeatPassword) {\r\n        return (\r\n            <div className=\"error\" >\r\n                Password must be similar!\r\n            </div>\r\n        );\r\n    }\r\n    else if (message) {\r\n        return (\r\n            <div className=\"error\" > {message}</div >\r\n        );\r\n\r\n    } else {\r\n        return (\r\n            < div className=\"valid\" >√It's OK </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Error;","const ADD_PLANET = \"ADD_PLANET\"\r\nconst DELETE = \"DELETE\"\r\nconst ADD = \"ADD\"\r\n\r\nexport default {\r\n    ADD_PLANET,\r\n    DELETE,\r\n    ADD\r\n}","import type from \"../type\"\r\n\r\nconst addUser = users => ({\r\n    type: type.ADD,\r\n    users\r\n})\r\n\r\nconst labelUp = labelUp => ({\r\n    type: \"LABEL_UP\",\r\n    labelUp\r\n})\r\n\r\nconst deleteUser = users => ({\r\n    type: type.DELETE,\r\n    users\r\n})\r\n\r\nconst loginUser = loginUser => ({\r\n    type: \"LOGIN_USER\",\r\n    loginUser\r\n})\r\n\r\nconst userLogin = userLogin => ({\r\n    type: \"IS_SUBMITTING\",\r\n    userLogin\r\n})\r\n\r\nexport default {\r\n    addUser,\r\n    deleteUser,\r\n    labelUp,\r\n    loginUser,\r\n    userLogin\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\"\r\nimport actions from \"../redux/actions/add-user\"\r\nimport { connect } from \"react-redux\"\r\nimport { motion } from \"framer-motion\"\r\n\r\nclass Result extends React.Component {\r\n    render() {\r\n        const validLogin = this.props.userData.filter(u => u.email === this.props.loginEmail).filter(u => u.password === this.props.loginPassword)\r\n\r\n        if (validLogin.length !== 0 && this.props.users.userLogin === true && this.props.isSubmitting === true) {\r\n            this.props.add(validLogin.map(u => { return (u.name) }))\r\n            return (\r\n                <motion.p\r\n                    animate={{ opacity: 1 }}\r\n                    initial={{ opacity: 0 }}\r\n                    className=\"result\">\r\n                    You are login {validLogin.map(u => { return (u.name) })}\r\n                </motion.p>\r\n            )\r\n        } else if (validLogin.length === 0 && this.props.isSubmitting === true && this.props.users.userLogin === false) {\r\n            return (\r\n                <motion.p\r\n                    animate={{ opacity: 1 }}\r\n                    initial={{ opacity: 0 }}\r\n                    className=\"result\"\r\n                >\r\n                    Sorry, but we don't have you in our data base!\r\n                <NavLink to=\"/\" style={{ color: \"red\" }}>Let's register then!</NavLink>\r\n                </motion.p>\r\n            )\r\n        } else return null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users,\r\n    userLogin: state.userLogin\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    add: (name) => dispatch(actions.loginUser(name)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);","import React from 'react'\r\nimport { motion } from \"framer-motion\"\r\nimport { connect } from \"react-redux\"\r\nimport * as yup from \"yup\"\r\nimport { Formik } from \"formik\"\r\nimport Error from \"./error\"\r\nimport actions from \"../redux/actions/add-user\"\r\nimport Result from './result'\r\n\r\nconst headerVariants = {\r\n    initial: {\r\n        y: 40,\r\n        opacity: 0\r\n    },\r\n    in: {\r\n        y: 0,\r\n        opacity: 1\r\n    },\r\n    out: {\r\n        y: -40,\r\n        opacity: 0\r\n    }\r\n}\r\n\r\nconst loginVariants = {\r\n    initial: {\r\n        x: -950,\r\n        opacity: 0\r\n    },\r\n    in: {\r\n        x: 0,\r\n        opacity: 1,\r\n    }\r\n}\r\n\r\nconst buttonVariants = {\r\n    initial: {\r\n        y: 100,\r\n        opacity: 0\r\n    },\r\n    in: {\r\n        y: 0,\r\n        opacity: 1\r\n    },\r\n}\r\n\r\nconst labelVariants = {\r\n    initial: {\r\n        opacity: 0,\r\n        y: 20\r\n    },\r\n    in: {\r\n        opacity: 1,\r\n        y: 0\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        y: -20\r\n    }\r\n}\r\n\r\nclass SingIn extends React.Component {\r\n\r\n    validationSchema = yup.object().shape({\r\n\r\n        login_email: yup.string().email(\"Incorrect e-mail\").required(\"You have to fill this input\"),\r\n        login_password: yup.string().min(\"4\", \"Password must have 4 or more characters\").required(\"You have to fill this input\"),\r\n    })\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            clicked: false\r\n        }\r\n    }\r\n    render() {\r\n        const labelUp = this.props.functions.functions\r\n\r\n        return (\r\n            <motion.section\r\n                variants={loginVariants}\r\n                initial=\"initial\"\r\n                animate=\"in\"\r\n                exit=\"initial\"\r\n                transition={{ delay: .3 }}\r\n            >\r\n                <motion.h1\r\n                    className=\"headers\"\r\n                    variants={headerVariants}\r\n                    initial=\"initial\"\r\n                    animate=\"in\"\r\n                    exit=\"out\"\r\n                    transition={{ duration: .7, delay: 1, type: \"spring\", stiffness: 200 }}\r\n                >\r\n                    Sing In\r\n                    </motion.h1>\r\n                <div className=\"sing-in-componets\">\r\n                    <Formik\r\n                        initialValues={{\r\n                            login_email: \"\",\r\n                            login_password: \"\"\r\n                        }}\r\n                        validationSchema={this.validationSchema}\r\n                        onSubmit={(values) => {\r\n                            const validLogin = this.props.users.users.filter(u => u.email === values.login_email).filter(u => u.password === values.login_password)\r\n                            if (validLogin.length !== 0) {\r\n                                this.props.add(true)\r\n                                const inputs = document.querySelectorAll(\"input\");\r\n                                inputs.forEach(i => i.value = \"\")\r\n                                values.login_password = \"\"\r\n                                values.login_email = \"\"\r\n                            } else {\r\n                                this.props.add(false)\r\n                                const inputs = document.querySelector(\"#login-password-input\");\r\n                                inputs.value = \"\"\r\n                                values.login_password = \"\"\r\n                            }\r\n                        }\r\n                        }\r\n                    >{({\r\n                        handleBlur,\r\n                        handleChange,\r\n                        handleSubmit,\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        isSubmitting\r\n                    }) => (\r\n                            <form action=\"POST\" method=\"\" onSubmit={handleSubmit}>\r\n                                <article onChange={() => this.props.change(false)}>\r\n                                    <div className=\"login-email-section\" onClick={() => { this.setState({ clicked: false }) }}>\r\n                                        <motion.input\r\n                                            variants={loginVariants}\r\n                                            initial=\"initial\"\r\n                                            animate=\"in\"\r\n                                            exit=\"initial\"\r\n                                            transition={{ duration: 0.3, transition: \"ease\" }}\r\n                                            type=\"email\"\r\n                                            className=\"inputs-style\"\r\n                                            id=\"login-email-input\"\r\n                                            name=\"login_email\"\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            onClick={labelUp}\r\n                                        />\r\n                                        <motion.label\r\n                                            variants={labelVariants}\r\n                                            animate=\"in\"\r\n                                            exit=\"initial\"\r\n                                            initial=\"initial\"\r\n                                            transition={{ delay: .2, transition: \"ease\" }}\r\n                                            htmlFor=\"login_email\"\r\n                                            className=\"labels-style\"\r\n                                            style={errors.login_email ? { color: \"red\" } : null}\r\n                                        >\r\n                                            E-mail\r\n                                         </motion.label>\r\n                                        <Error touched={touched.login_email} message={errors.login_email} />\r\n                                    </div>\r\n                                    <div className=\"login-password-section\" onClick={() => { this.setState({ clicked: false }) }}>\r\n                                        <motion.input\r\n                                            variants={loginVariants}\r\n                                            initial=\"initial\"\r\n                                            animate=\"in\"\r\n                                            transition={{ duration: 0.3, delay: .3 }}\r\n                                            type=\"password\"\r\n                                            onClick={labelUp}\r\n                                            className=\"inputs-style\"\r\n                                            exit=\"out\"\r\n                                            id=\"login-password-input\"\r\n                                            name=\"login_password\"\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                        <motion.label\r\n                                            variants={labelVariants}\r\n                                            animate=\"in\"\r\n                                            exit=\"out\"\r\n                                            initial=\"initial\"\r\n                                            transition={{ delay: .5 }}\r\n                                            htmlFor=\"login_password\"\r\n                                            className=\"labels-style\"\r\n                                            style={errors.login_password ? { color: \"red\" } : null}\r\n                                        >\r\n                                            Password\r\n                                        </motion.label>\r\n                                        <Error touched={touched.login_password} message={errors.login_password} />\r\n                                    </div>\r\n                                </article>\r\n                                <motion.button\r\n                                    className=\"submit-button\"\r\n                                    type=\"submit\"\r\n                                    variants={buttonVariants}\r\n                                    initial=\"initial\"\r\n                                    animate=\"in\"\r\n                                    exit=\"initial\"\r\n                                    transition={{ delay: .6 }}\r\n                                    onClick={() => this.setState({ clicked: true })}\r\n                                >\r\n                                    <span className=\"submit-text\">Sing In</span>\r\n                                </motion.button>\r\n                                {this.state.clicked ?\r\n                                    <Result\r\n                                        loginPassword={values.login_password}\r\n                                        loginEmail={values.login_email}\r\n                                        isSubmitting={isSubmitting}\r\n                                        userData={this.props.users.users}\r\n                                    /> : null\r\n                                }\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </motion.section >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users,\r\n    functions: state.functions,\r\n    userLogin: state.userLogin\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    add: (setSubmitting) => dispatch(actions.userLogin(setSubmitting)),\r\n    change: (userLogin) => dispatch(actions.userLogin(userLogin))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingIn);","import React from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport actions from \"../redux/actions/add-user\"\r\nimport { motion } from \"framer-motion\"\r\nimport FlipMove from \"react-flip-move\"\r\n\r\nconst variants = {\r\n    in: {\r\n        left: 0,\r\n        opacity: 1,\r\n        rotate: 0\r\n    },\r\n    out: {\r\n        left: -400,\r\n        opacity: 0,\r\n        rotate: 20,\r\n    }\r\n}\r\nconst DataBase = (props) => {\r\n\r\n    const deleteUser = (id) => {\r\n        props.add(id)\r\n    }\r\n    return (\r\n        <motion.section\r\n            className=\"table-section\"\r\n            variants={variants}\r\n            animate={\"in\"}\r\n            initial={\"out\"}\r\n            exit=\"out\"\r\n            transition={{\r\n                duration: 0.5\r\n            }}\r\n        >\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Username\r\n                            </th>\r\n                        <th>\r\n                            Second Name\r\n                             </th>\r\n                        <th>\r\n                            E-Mail\r\n                             </th>\r\n                        <th>\r\n                            Password\r\n                             </th>\r\n                        <th>\r\n                            Repeat Password\r\n                             </th>\r\n                        <th>\r\n                            Code Phone\r\n                              </th>\r\n                        <th>\r\n                            Phone Number\r\n                             </th>\r\n                        <th>\r\n                            Country\r\n                            </th>\r\n                        <th>\r\n                            Gender\r\n                             </th>\r\n                        <th>\r\n                            Delete User\r\n                            </th>\r\n                    </tr>\r\n                </thead>\r\n                <FlipMove typeName=\"tbody\">\r\n                    {props.users.users.map((users) => {\r\n                        return (\r\n                            <tr key={users.id}>\r\n                                <td >{users.name}</td>\r\n                                <td >{users.secondName}</td>\r\n                                <td >{users.email}</td>\r\n                                <td >{users.password}</td>\r\n                                <td >{users.repeatPassword}</td>\r\n                                <td >{users.codePhone}</td>\r\n                                <td >{users.phoneNumber}</td>\r\n                                <td >{users.planet}</td>\r\n                                <td >{users.gender}</td>\r\n                                <td>\r\n                                    <button onClick={() => {\r\n                                        deleteUser(users.id)\r\n                                    }}\r\n                                        className=\"delete-user-btn\"\r\n                                    >\r\n                                        Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </FlipMove>\r\n            </table >\r\n        </motion.section>\r\n    );\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    add: (id) => dispatch(actions.deleteUser(id))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DataBase)","import React from 'react';\r\nimport '../App.css';\r\nimport { connect } from \"react-redux\"\r\nimport actions from \"../redux/actions/add-user\"\r\nimport { Formik } from \"formik\"\r\nimport Error from \"./error\"\r\nimport * as yup from \"yup\"\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst variants = {\r\n    in: {\r\n        opacity: 1,\r\n        x: 0,\r\n    }, out: {\r\n        opacity: 0,\r\n        x: 1000,\r\n    }\r\n}\r\n\r\nclass SingUp extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            planets: []\r\n        }\r\n    }\r\n\r\n    validationSchema = yup.object().shape({\r\n\r\n        user: yup.string().min(\"3\", \"Your username sholud have more min 3 letters\").required(\"You have to fill this input\"),\r\n        second_name: yup.string().min(\"2\", \"Your second name sholud have more min 2 letters\").required(\"You have to fill this input\"),\r\n        email: yup.string().email(\"Incorrect e-mail\").required(\"You have to fill this input\"),\r\n        password: yup.string().min(\"4\", \"Password must have 4 or more characters\").required(\"You have to fill this input\"),\r\n        repeat_password: yup.string().min(\"4\", \"Password must have 4 or more characters\").required(\"You have to fill this input\"),\r\n        phone_number: yup.string().min(\"9\", \"Number should have 9 numbers\").max(\"9\", \"Number should have 9 numbers\").required(\"You have to fill this input\"),\r\n        gender: yup.string().required(\"Choose your sex\")\r\n    })\r\n\r\n    render() {\r\n\r\n        const planets = \"planets\";\r\n\r\n        async function getData() {\r\n            try {\r\n                let res = await fetch(`https://swapi.co/api/${planets}`);\r\n                if (res.status === 200) {\r\n                    let data = await res.json();\r\n\r\n                    return data\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n\r\n        getData().then(res => {\r\n            this.setState({\r\n                planets: res.results\r\n            })\r\n        })\r\n\r\n        return (\r\n            <motion.article\r\n                animate=\"in\"\r\n                initial={\"out\"}\r\n                exit=\"out\" t\r\n                ransition={{ duration: 0.4, delay: 0.2 }}\r\n                variants={variants}>\r\n                <header>\r\n                    <h1 className=\"headers\">\r\n                        Order Form\r\n                    </h1>\r\n                </header>\r\n                <section>\r\n                    <Formik\r\n                        initialValues={{\r\n                            user: \"\",\r\n                            second_name: \"\",\r\n                            email: \"\",\r\n                            password: \"\",\r\n                            repeat_password: \"\",\r\n                            phone_number: \"\",\r\n                            code_phone: \"+48\",\r\n                            planet: \"Alderaan\",\r\n                            gender: \"\"\r\n                        }}\r\n                        validationSchema={this.validationSchema}\r\n                        onSubmit={(values, { setSubmitting }) => {\r\n                            const highestId = this.props.users.users.length + 1;\r\n                            if (values.password !== values.repeat_password) {\r\n                                setSubmitting(false)\r\n                            }\r\n                            else {\r\n                                setSubmitting(true);\r\n                                this.props.add(\r\n                                    values.user,\r\n                                    values.second_name,\r\n                                    values.email,\r\n                                    highestId,\r\n                                    values.password,\r\n                                    values.repeat_password,\r\n                                    values.code_phone,\r\n                                    values.phone_number,\r\n                                    values.planet,\r\n                                    values.gender)\r\n                            }\r\n                        }\r\n                        }\r\n                    >\r\n                        {({\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            handleSubmit,\r\n                            isSubmitting\r\n                        }) => (\r\n                                <form action=\"POST\" method=\"\" onSubmit={handleSubmit}>\r\n                                    <motion.div className=\"username-section\"\r\n                                        animate={{ y: 0, scale: 1 }}\r\n                                        initial={{ y: -200, scale: 1.3 }}\r\n                                        exit={{ y: -200 }}\r\n                                        transition={{ delay: 0.3 }}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"user\"\r\n                                            id=\"username-input\"\r\n                                            className={touched.user && errors.user ? \"has-error inputs-style\" : \"inputs-style\"}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            onClick={this.props.functions.functions}\r\n                                            required\r\n                                        />\r\n                                        <label\r\n                                            htmlFor=\"user\"\r\n                                            className=\"labels-style\"\r\n                                            style={errors.user ? { color: \"red\" } : null} >\r\n                                            Type your username:\r\n                                        </label>\r\n                                        <span className=\"inputs-icon\"><i className=\"fas fa-user-tie\"></i></span>\r\n                                        <Error message={errors.user} touched={touched.user} />\r\n                                    </motion.div>\r\n                                    <motion.div className=\"second-name-section\"\r\n                                        animate={{ scale: 1, opacity: 1, display: \"block\" }}\r\n                                        initial={{ opacity: 0, scale: 0.3, display: \"none\" }}\r\n                                        exit={{ scale: 0, opacity: 0 }}\r\n                                        transition={{ delay: 0.5 }}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"second_name\"\r\n                                            id=\"second-name-input\"\r\n                                            className={touched.second_name && errors.second_name ? \"has-error inputs-style\" : \"inputs-style\"}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            onClick={this.props.functions.functions}\r\n                                            required\r\n                                        />\r\n                                        <label\r\n                                            htmlFor=\"second_name\"\r\n                                            className=\"labels-style\"\r\n                                            style={errors.second_name ? { color: \"red\" } : null} >\r\n                                            Type your second name:\r\n                                        </label>\r\n                                        <span className=\"inputs-icon\"><i className=\"fas fa-user-edit\"></i></span>\r\n                                        <Error message={errors.second_name} touched={touched.second_name} />\r\n                                    </motion.div>\r\n                                    <motion.div className=\"email-section\"\r\n                                        animate={{ y: 0, scale: 1 }}\r\n                                        initial={{ y: -200, scale: 1.3 }}\r\n                                        exit={{ y: -200 }}\r\n                                        transition={{ delay: 0.3 }}>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            id=\"email-input\"\r\n                                            className={touched.email && errors.email ? \"has-error inputs-style\" : \"inputs-style\"}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            onClick={this.props.functions.functions}\r\n                                            required\r\n                                        />\r\n                                        <label\r\n                                            htmlFor=\"email\"\r\n                                            className=\"labels-style\"\r\n                                            style={errors.email ? { color: \"red\" } : null}\r\n                                        >\r\n                                            Type your E-mail:\r\n                                        </label>\r\n                                        <span className=\"inputs-icon\"><i className=\"fas fa-envelope\"></i></span>\r\n                                        <Error message={errors.email} touched={touched.email} />\r\n                                    </motion.div>\r\n                                    <motion.div className=\"password-section\"\r\n                                        animate={{ scale: 1, opacity: 1, display: \"block\" }}\r\n                                        initial={{ opacity: 0, scale: 0.3, display: \"none\" }}\r\n                                        exit={{ scale: 0, opacity: 0 }}\r\n                                        transition={{ delay: 0.7 }}>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            id=\"password-input\"\r\n                                            className={touched.password && errors.password ? \"has-error inputs-style\" : \"inputs-style\"}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            onClick={this.props.functions.functions}\r\n                                            required\r\n                                        />\r\n                                        <label\r\n                                            htmlFor=\"password\"\r\n                                            className=\"labels-style\"\r\n                                            style={errors.password ? { color: \"red\" } : null} >\r\n                                            Type your password\r\n                                        </label>\r\n                                        <span className=\"inputs-icon\"><i className=\"fas fa-key\"></i></span>\r\n                                        <Error message={errors.password} touched={touched.password} password={values.password} repeatPassword={values.repeat_password} />\r\n                                    </motion.div>\r\n                                    <motion.div className=\"password-section\"\r\n                                        animate={{ y: 0, scale: 1 }}\r\n                                        initial={{ y: -200, scale: 1.3 }}\r\n                                        exit={{ y: -200 }}\r\n                                        transition={{ delay: 0.5 }}>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            name=\"repeat_password\"\r\n                                            id=\"repeat-password-input\"\r\n                                            className={touched.repeat_password && errors.repeat_password ? \"has-error inputs-style\" : \"inputs-style\"}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            onClick={this.props.functions.functions}\r\n                                            required\r\n                                        />\r\n                                        <label\r\n                                            htmlFor=\"repeat_password\"\r\n                                            className=\"labels-style\"\r\n                                            style={errors.repeat_password ? { color: \"red\" } : null} >\r\n                                            Type your password\r\n                                        </label>\r\n                                        <span className=\"inputs-icon\"><i className=\"fas fa-lock\"></i></span>\r\n                                        <Error message={errors.repeat_password} touched={touched.repeat_password} password={values.password} repeatPassword={values.repeat_password} />\r\n                                    </motion.div>\r\n                                    <section className=\"phone-section\">\r\n                                        <motion.div className=\"phone-code\"\r\n                                            animate={{ scale: 1, opacity: 1, display: \"block\" }}\r\n                                            initial={{ opacity: 0, scale: 0.3, display: \"none\" }}\r\n                                            exit={{ scale: 0, opacity: 0 }}\r\n                                            transition={{ delay: 0.9 }}>\r\n                                            <select\r\n                                                name=\"code_phone\"\r\n                                                id=\"code-phone\"\r\n                                                className=\"inputs-style\"\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                            >\r\n                                                <option value=\"+48\">+48</option>\r\n                                                <option value=\"+237\">+237</option>\r\n                                                <option value=\"+45\">+45</option>\r\n                                            </select>\r\n                                            <i className=\"fas fa-arrow-down code-phone-arrow\"></i>\r\n                                        </motion.div>\r\n                                        <motion.div className=\"phone\"\r\n                                            animate={{ scale: 1, opacity: 1, display: \"block\" }}\r\n                                            initial={{ opacity: 0, scale: 0.3, display: \"none\" }}\r\n                                            exit={{ scale: 0, opacity: 0 }}\r\n                                            transition={{ delay: 1 }}>\r\n                                            <label htmlFor=\"code-phone\"></label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                name=\"phone_number\"\r\n                                                className={touched.phone_number && errors.phone_number ? \"has-error inputs-style\" : \"inputs-style\"}\r\n                                                id=\"phone-number\"\r\n                                                onChange={handleChange}\r\n                                                onClick={this.props.functions.functions}\r\n                                                onBlur={handleBlur}\r\n                                            />\r\n                                            <label htmlFor=\"phone_number\"\r\n                                                className=\"labels-style\"\r\n                                                style={errors.phone_number ? { color: \"red\" } : null}\r\n                                                required\r\n                                            >\r\n                                                Phone Number\r\n                                            </label>\r\n                                            <span className=\"inputs-icon phone-icon\"><i className=\"fas fa-phone-square\"></i></span>\r\n                                            <Error message={errors.phone_number} touched={touched.phone_number} />\r\n                                        </motion.div>\r\n                                    </section>\r\n                                    <motion.div className=\"gender\"\r\n                                        animate={{ y: 0, scale: 1 }}\r\n                                        initial={{ y: -200, scale: 1.2 }}\r\n                                        exit={{ y: -200, scale: 1.3 }}\r\n                                        transition={{ delay: 0.8 }}>\r\n                                        <label htmlFor=\"male\" className=\"male\">\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                name=\"gender\"\r\n                                                id=\"male\"\r\n                                                value=\"Male\"\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                            <i className=\"fas fa-male center-icons\"></i>\r\n                                            <span style={{ fontSize: \"16px\", textAlign: \"center\", display: \"block\", marginLeft: \"5px\" }}> Male</span>\r\n                                        </label>\r\n                                        <label htmlFor=\"female\" className=\"female\">\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                name=\"gender\"\r\n                                                id=\"female\"\r\n                                                value=\"Female\"\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                            <i className=\"fas fa-female center-icons\"></i>\r\n                                            <span style={{ fontSize: \"16px\", textAlign: \"center\", display: \"block\", marginLeft: \"5px\" }}> Female</span>\r\n                                        </label>\r\n                                    </motion.div>\r\n                                    <div className=\"sex-err\">\r\n                                        <Error message={errors.gender} touched={touched.gender} />\r\n                                    </div>\r\n                                    <motion.div className=\"planet\"\r\n                                        animate={{ y: 0, scale: 1 }}\r\n                                        initial={{ y: -200, scale: 1.2 }}\r\n                                        exit={{ y: -200 }}\r\n                                        transition={{ delay: 1, scale: 1 }}>\r\n                                        <select\r\n                                            name=\"planet\"\r\n                                            id=\"planet-input\"\r\n                                            className=\"inputs-style\"\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        >\r\n                                            {this.state.planets.map(p => {\r\n                                                return (\r\n                                                    <option key={p.name} value={p.name}>{p.name}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                        <span className=\"arrow-select\">\r\n                                            <i className=\"fas fa-arrow-up\"></i>\r\n                                            <i className=\"fas fa-arrow-down\"></i>\r\n                                        </span>\r\n                                    </motion.div>\r\n                                    <motion.button\r\n                                        animate={{ y: 0, opacity: 1 }}\r\n                                        initial={{ y: -200, opacity: 0 }}\r\n                                        exit={{ y: -200, opacity: 0 }}\r\n                                        transition={{ delay: 1.1 }}\r\n                                        type=\"submit\"\r\n                                        className=\"submit-button\"\r\n                                        disabled={isSubmitting}\r\n                                    >\r\n                                        <span className=\"submit-text\">Submit</span>\r\n                                    </motion.button>\r\n                                </form>\r\n                            )}\r\n                    </Formik >\r\n                </section>\r\n            </motion.article >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users,\r\n    functions: state.functions\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    add: (name, secondName, email, id, password, repeatPassword, codePhone, phoneNumber, planet, gender) =>\r\n        dispatch(actions.addUser({ name, secondName, id, email, password, repeatPassword, codePhone, phoneNumber, planet, gender }))\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingUp);","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { motion } from \"framer-motion\"\r\nimport actions from \"../redux/actions/add-user\"\r\n\r\nconst avatarVariants = {\r\n    in: {\r\n        opacity: 1,\r\n        rotateY: 0\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        rotateY: 90\r\n    }\r\n}\r\n\r\nconst nameVariants = {\r\n    in: {\r\n        opacity: 1,\r\n        rotateY: 0,\r\n        y: 0\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        rotateY: 90,\r\n        y: 40\r\n    }\r\n}\r\n\r\nconst sectionVariants = {\r\n    in: {\r\n        opacity: 1,\r\n        y: 0\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        y: -100\r\n    }\r\n}\r\n\r\nclass UserProfile extends React.Component {\r\n\r\n    render() {\r\n        if (this.props.users.userLogin) {\r\n\r\n            return (\r\n                <motion.section className=\"user-profile\"\r\n                    variants={sectionVariants}\r\n                    animate={\"in\"}\r\n                    initial={\"out\"}\r\n                >\r\n                    <motion.div className=\"user-avatar\"\r\n                        variants={avatarVariants}\r\n                        animate={\"in\"}\r\n                        initial={\"out\"}\r\n                        transition={{ duration: 1 }}\r\n                    >\r\n                        <i className=\"fas fa-user-tie\"></i>\r\n                    </motion.div>\r\n                    <motion.div\r\n                        className=\"user-name\"\r\n                        variants={nameVariants}\r\n                        animate={\"in\"}\r\n                        initial={\"out\"}\r\n                        transition={{ duration: 1 }}\r\n                    >{this.props.users.userLogin ? this.props.loginUser.name : null}\r\n                    </motion.div>\r\n                    <button className=\"log-out\" onClick={() => this.props.add(false)}>Log Out</button>\r\n                </motion.section>\r\n\r\n            )\r\n        } else return null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users,\r\n    loginUser: state.loginUser,\r\n    userLogin: state.userLogin\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    add: (isSubmitting) => dispatch(actions.userLogin(isSubmitting))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile)","import React from 'react';\nimport './App.css';\nimport { AnimatePresence } from \"framer-motion\"\nimport Nav from \"./Components/nav\"\nimport SingIn from \"./Components/singIn\"\nimport DataBase from \"./Components/dataBase\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\nimport SingUp from \"./Components/singUp\"\nimport UserProfile from \"./Components/userProfile\"\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <main>\n        <Router basename=\"/Form-React-Redux/\">\n          <Route render={({ location }) => (\n            <section>\n              <Nav location={location} />\n              <UserProfile />\n              <AnimatePresence exitBeforeEnter>\n                <Switch location={location} key={location.pathname}>\n                  <Route path=\"/\" exact>\n                    <SingUp />\n                  </Route>\n                  <Route path=\"/singIn\" exact>\n                    <SingIn />\n                  </Route>\n                  <Route path=\"/dataBase\" exact>\n                    <DataBase />\n                  </Route>\n                </Switch>\n              </AnimatePresence>\n            </section>\n          )}\n          />\n        </Router>\n      </main>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import types from \"../type\"\r\nconst onInputActive = () => {\r\n    const inputs = document.querySelectorAll(\"input\");\r\n    const label = document.querySelectorAll(\"label\");\r\n\r\n    inputs.forEach(i => {\r\n        if (i === document.activeElement || i.value !== \"\") {\r\n            const name = i.name;\r\n\r\n            label.forEach(l => {\r\n                const labelName = l.htmlFor;\r\n\r\n                if (name === labelName) {\r\n                    l.classList.add(\"label-onclick-size\")\r\n                }\r\n            })\r\n        } else {\r\n            const name = i.name;\r\n\r\n            label.forEach(l => {\r\n                const labelName = l.htmlFor;\r\n\r\n                if (name === labelName) {\r\n                    l.classList.remove(\"label-onclick-size\")\r\n                }\r\n                const body = document.querySelector(\"body\");\r\n                body.addEventListener(\"click\", () => {\r\n\r\n                    if (name === labelName && i.value === \"\") {\r\n                        l.classList.remove(\"label-onclick-size\")\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    })\r\n}\r\nconst initialState = {\r\n\r\n    users: [{\r\n        name: \"Piotr\",\r\n        secondName: \"Wiśniewski\",\r\n        phoneNumber: 784323122,\r\n        email: \"piotr.wisniwski@op.pl\",\r\n        gender: \"Male\",\r\n        planet: \"Poland\",\r\n        codePhone: \"+48\",\r\n        id: 1,\r\n        password: \"Jksf\",\r\n        repeatPassword: \"Jksf\",\r\n    }, {\r\n        name: \"Paweł\",\r\n        id: 0,\r\n        password: \"Jks12\",\r\n        repeatPassword: \"Jks12\",\r\n        secondName: \"Kotowicz\",\r\n        phoneNumber: 784456344,\r\n        codePhone: \"+48\",\r\n        email: \"pawel.kotowicz@onet.pl\",\r\n        gender: \"Male\",\r\n        planet: \"Poland\",\r\n    }],\r\n    functions: onInputActive,\r\n    userLogin: false\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.DELETE:\r\n            const newState = state.users.filter(u => u.id !== action.users)\r\n            return {\r\n                users: newState\r\n            }\r\n            case types.ADD:\r\n                return {\r\n                    ...state, users: [...state.users, action.users]\r\n                }\r\n                case \"IS_SUBMITTING\":\r\n                    return {\r\n                        ...state, userLogin: action.userLogin\r\n                    }\r\n                    default:\r\n                        return state\r\n    }\r\n}\r\n\r\nexport default userReducer","import types from \"../type\"\r\n\r\nconst initialState = {\r\n    planets: []\r\n}\r\n\r\nconst planetsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.ADD_PLANET:\r\n            return {\r\n                ...state, planets: [...state.planets, action.planets]\r\n            }\r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport default planetsReducer","const onInputActive = () => {\r\n    const inputs = document.querySelectorAll(\"input\");\r\n    const label = document.querySelectorAll(\"label\");\r\n\r\n    inputs.forEach(i => {\r\n        if (i === document.activeElement || i.value !== \"\") {\r\n            const name = i.name;\r\n\r\n            label.forEach(l => {\r\n                const labelName = l.htmlFor;\r\n\r\n                if (name === labelName) {\r\n                    l.classList.add(\"label-onclick-size\")\r\n                }\r\n            })\r\n        } else {\r\n            const name = i.name;\r\n\r\n            label.forEach(l => {\r\n                const labelName = l.htmlFor;\r\n\r\n                if (name === labelName) {\r\n                    l.classList.remove(\"label-onclick-size\")\r\n                }\r\n                const body = document.querySelector(\"body\");\r\n                body.addEventListener(\"click\", () => {\r\n\r\n                    if (name === labelName && i.value === \"\") {\r\n                        l.classList.remove(\"label-onclick-size\")\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nconst functionsState = {\r\n    functions: onInputActive\r\n}\r\n\r\nconst functionsReducer = (state = functionsState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default functionsReducer;\r\n","const initialState = {\r\n    name: \"\"\r\n}\r\n\r\nconst loginUserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_USER\":\r\n            return { ...state, name: action.loginUser }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default loginUserReducer","import userReducer from \"./reducers/userReducer\"\r\nimport planetsReducer from \"./reducers/planetsReducer\"\r\nimport functionsReducer from \"./reducers/functionsReducer\"\r\nimport loginUserReducer from \"./reducers/loginUserReducer\"\r\n\r\nexport { default as types } from \"./type\"\r\nexport { default as actionsPassword } from \"./actions/add-password\"\r\nexport { default as actionsUser } from \"./actions/add-user\"\r\nexport default {\r\n    userReducer,\r\n    planetsReducer,\r\n    functionsReducer,\r\n    loginUserReducer\r\n}","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./redux/indexRedux\"\r\nimport planetsReducer from \"./redux/indexRedux\"\r\nimport functionsReducer from \"./redux/indexRedux\"\r\nimport loginUserReducer from \"./redux/indexRedux\"\r\n\r\nconst conectReducer = combineReducers({\r\n    users: userReducer.userReducer,\r\n    planets: planetsReducer.planetsReducer,\r\n    functions: functionsReducer.functionsReducer,\r\n    loginUser: loginUserReducer.loginUserReducer\r\n})\r\n\r\nexport default conectReducer","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport conectReducer from \"./all-reducers\"\r\n\r\nconst store = createStore(conectReducer, composeWithDevTools());\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\"\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}